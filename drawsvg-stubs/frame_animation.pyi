"""
This type stub file was generated by pyright.
"""

class FrameAnimation:
    def __init__(self, draw_func=..., callback=...) -> None:
        ...
    
    def append_frame(self, frame): # -> None:
        ...
    
    def draw_frame(self, *args, **kwargs):
        ...
    
    def save_video(self, file, **kwargs): # -> None:
        ...
    
    def save_spritesheet(self, file, **kwargs): # -> None:
        ...
    


class FrameAnimationContext:
    def __init__(self, draw_func=..., out_file=..., jupyter=..., spritesheet=..., pause=..., clear=..., delay=..., disable=..., video_args=..., _patch_delay=...) -> None:
        ...
    
    def draw_jupyter_frame(self, frame): # -> None:
        ...
    
    def __enter__(self): # -> FrameAnimation:
        ...
    
    def __exit__(self, exc_type, exc_value, exc_traceback): # -> None:
        ...
    


def frame_animate_video(out_file, draw_func=..., jupyter=..., **video_args): # -> FrameAnimationContext:
    '''
    Returns a context manager that stores frames and saves a video when the
    context exits.

    Example:
    ```
    with frame_animate_video('video.mp4') as anim:
        while True:
            ...
            anim.draw_frame(...)
    ```
    '''
    ...

def frame_animate_spritesheet(out_file, draw_func=..., jupyter=..., **video_args): # -> FrameAnimationContext:
    '''
    Returns a context manager that stores frames and saves a spritesheet when
    the context exits.

    Example:
    ```
    with frame_animate_spritesheet('sheet.png', row_length=10) as anim:
        while True:
            ...
            anim.draw_frame(...)
    ```
    '''
    ...

def frame_animate_jupyter(draw_func=..., pause=..., clear=..., delay=..., **kwargs): # -> FrameAnimationContext:
    '''
    Returns a context manager that displays frames in a Jupyter notebook.

    Example:
    ```
    with frame_animate_jupyter(delay=0.5) as anim:
        while True:
            ...
            anim.draw_frame(...)
    ```
    '''
    ...

